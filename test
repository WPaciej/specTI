// Funkcja wyznaczajaca wymiary macierzy
std::pair<int, int> wymiaryMacierzy(const Macierz& macierz) {
    if (macierz.empty()) return {0, 0};
    return {macierz.size(), macierz[0].size()};
}

// Funkcja obliczająca sumę wszystkich elementów macierzy
int sumaElementow(const Macierz& macierz) {
    int suma = 0;
    for (const auto& wiersz : macierz) {
        suma += std::accumulate(wiersz.begin(), wiersz.end(), 0);
    }
    return suma;
}

// Funkcja obliczająca średnią wartość wszystkich elementów
double sredniaElementow(const Macierz& macierz) {
    int liczbaElementow = 0;
    int suma = sumaElementow(macierz);
    for (const auto& wiersz : macierz) {
        liczbaElementow += wiersz.size();
    }
    return static_cast<double>(suma) / liczbaElementow;
}

// Funkcja obliczająca sumę elementów na przekątnej (głównej lub bocznej)
int sumaPrzekatnej(const Macierz& macierz, bool glownaPrzekatna) {
    int suma = 0;
    int rozmiar = std::min(macierz.size(), macierz[0].size());
    for (int i = 0; i < rozmiar; ++i) {
        if (glownaPrzekatna) {
            suma += macierz[i][i];
        } else {
            suma += macierz[i][rozmiar - i - 1];
        }
    }
    return suma;
}

// Funkcja sprawdzająca, czy wszystkie elementy macierzy są zerowe
bool czyMacierzZerowa(const Macierz& macierz) {
    for (const auto& wiersz : macierz) {
        for (int element : wiersz) {
            if (element != 0) {
                return false;
            }
        }
    }
    return true;
}
